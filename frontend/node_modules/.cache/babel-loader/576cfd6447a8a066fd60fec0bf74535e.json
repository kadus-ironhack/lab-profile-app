{"ast":null,"code":"import axios from 'axios';\nlet baseURL;\nprocess.env.NODE_ENV === 'production' ? baseURL = 'here should be your production endpoint' : baseURL = 'http://localhost:3000';\nconst service = axios.create({\n  withCredentials: true,\n  baseURL\n});\nconst actions = {\n  isLoggedIn: async () => {\n    return await service.get('/is-logged-in');\n  },\n  signUp: async user => {\n    return await service.post('/signup', user);\n  },\n  logIn: async user => {\n    return await service.post('/login', user);\n  },\n  logOut: async () => {\n    return await service.get('/logout');\n  }\n};\nexport default actions;","map":{"version":3,"sources":["/Users/kadus/Documents/Ironhack/labs/week-7/badgirl/frontend/src/services/index.js"],"names":["axios","baseURL","process","env","NODE_ENV","service","create","withCredentials","actions","isLoggedIn","get","signUp","user","post","logIn","logOut"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,IAAIC,OAAJ;AAEAC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GACKH,OAAO,GAAG,yCADf,GAEKA,OAAO,GAAG,uBAFf;AAIA,MAAMI,OAAO,GAAGL,KAAK,CAACM,MAAN,CAAa;AAAEC,EAAAA,eAAe,EAAE,IAAnB;AAAyBN,EAAAA;AAAzB,CAAb,CAAhB;AAEA,MAAMO,OAAO,GAAG;AACdC,EAAAA,UAAU,EAAE,YAAY;AACtB,WAAO,MAAMJ,OAAO,CAACK,GAAR,CAAY,eAAZ,CAAb;AACD,GAHa;AAIdC,EAAAA,MAAM,EAAE,MAAOC,IAAP,IAAgB;AACtB,WAAO,MAAMP,OAAO,CAACQ,IAAR,CAAa,SAAb,EAAwBD,IAAxB,CAAb;AACD,GANa;AAOdE,EAAAA,KAAK,EAAE,MAAOF,IAAP,IAAgB;AACrB,WAAO,MAAMP,OAAO,CAACQ,IAAR,CAAa,QAAb,EAAuBD,IAAvB,CAAb;AACD,GATa;AAUdG,EAAAA,MAAM,EAAE,YAAY;AAClB,WAAO,MAAMV,OAAO,CAACK,GAAR,CAAY,SAAZ,CAAb;AACD;AAZa,CAAhB;AAeA,eAAeF,OAAf","sourcesContent":["import axios from 'axios';\nlet baseURL;\n\nprocess.env.NODE_ENV === 'production'\n  ? (baseURL = 'here should be your production endpoint')\n  : (baseURL = 'http://localhost:3000');\n\nconst service = axios.create({ withCredentials: true, baseURL });\n\nconst actions = {\n  isLoggedIn: async () => {\n    return await service.get('/is-logged-in');\n  },\n  signUp: async (user) => {\n    return await service.post('/signup', user);\n  },\n  logIn: async (user) => {\n    return await service.post('/login', user);\n  },\n  logOut: async () => {\n    return await service.get('/logout');\n  }\n};\n\nexport default actions;\n"]},"metadata":{},"sourceType":"module"}